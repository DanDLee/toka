#! /usr/bin/toka

#! Demonstrates building a double-linked list, and walking through it
#! (Initial attempt, this should get cleaned up a *lot* in the future)

 needs case

 value message

 [ message switch 
   0 [ 0 swap get-element ] case
   1 [ 0 swap put-element ] case
   2 [ 1 swap get-element ] case
   3 [ 1 swap put-element ] case
   4 [ 2 swap get-element ] case
   5 [ 2 swap put-element ] case
 ] is action
 [ ` [ invoke 3 cells malloc # ` action compile ` ] invoke is ] is link

 [ 0 to message ] is link.prev
 [ 1 to message ] is link.setPrev
 [ 2 to message ] is link.next
 [ 3 to message ] is link.setNext
 [ 4 to message ] is link.data
 [ 5 to message ] is link.setData

 reset
 link foo
 link bar
 ` bar :see
 ` bar link.setNext foo
 100   link.setData foo
 200   link.setData bar
 link.data foo .
 link.next foo link.data invoke .
bye
