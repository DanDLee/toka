#! /usr/bin/toka

#! ***************************************************************************
#! Toka implementation of BrainF**K
#!
#! Filename: bf.toka
#!
#! Documentation:
#!       BF is a very minimalistic language, with only eight
#! commands, yet it is (theoretically) powerfull enough to
#! compute anything that can be computed (with a Turing Machine).
#! The language operates on an array of memory cells each containing
#! an initially zero integer value. There is a memory pointer which
#! initially points to the first memory cell. Each of the eight
#! commands consists of a single ASCII character, with the following meaning:
#!
#! Commands:
#!       brainfuck command      C equivalent
#!                     >          ++ptr;
#!                     <          --ptr;
#!                     +          ++*ptr;
#!                     -          --*ptr;
#!                     .          putchar(*ptr);
#!                     ,          *ptr=getchar();
#!                     [          while (*ptr) {
#!                     ]          }
#! 
#! ****************************************************************************

needs case
needs console

#! Set Tape to a length of 30,000 
30000 is-data 30KB
30KB  is-array tape

value| TP buffer loop-ptr |

[ TP tape + ] is this

[ to buffer
  [ buffer c@ switch
    char: > [ TP 1+ to TP ] case
    char: < [ TP 1- to TP ] case 
    char: + [ this c@ 1+ this c! ] case
    char: - [ this c@ 1- this c! ] case
    char: . [ this c@ emit ] case
    char: , [ getkey this c! ] case
    char: [ [ buffer to loop-ptr ] case
    char: ] [ this c@ 0 <> [ loop-ptr to buffer ] ifTrue ] case
    buffer 1+ to buffer
    buffer c@ 0 <>
  ] whileTrue
  cr
] is bf


[ " bf: can't open " type type cr ] is error

console_init
#args [ i arglist array.get
        file.slurp dup 0 <>
        [ bf ] [ drop i arglist array.get error ] ifTrueFalse
      ] keep +iterate
console_cleanup
bye
