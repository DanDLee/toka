#! /usr/bin/toka
#! --------------------------------------------------------
#! This is a set of benchmarks for Toka. It requires the
#! following libraries to be installed:
#!
#!  - time
#!  - shell
#!
#! The basic idea is to take common operations and run them
#! insane numbers of times. In many cases, this will mean
#! cycling them in a loop 100 million times or more.
#!
#! File operations get off a bit easier; we only create and
#! read in files about 2,000 times, mostly since I/O is known
#! to be slower than other operations.
#!
#! --------------------------------------------------------

needs time
needs shell
needs values
needs bsort
needs math

[ lnparse type cr reset ] is t:

variable total
{
  time_t start
  time_t end

  [ end @ start @ - ] is seconds?

  [ start time drop
    invoke
    end time drop
    seconds? . ." seconds elapsed\n"
    seconds? total +!
  ]
} is :time

t: Stage 1: Empty Quotes
t: ----------------------------------
t: 100,000,000 iterations
[ 100000000 [ ] iterate ] :time
cr


t: Stage 2: "1 dup swap drop drop"
t: ----------------------------------
t: 100,000,000 iterations
[ 100000000 [ 1 dup swap drop drop ] iterate ] :time
cr


t: Stage 3: foo @ foo !
t: ----------------------------------
variable foo
t: 100,000,000 iterations
[ 100000000 [ foo @ foo ! ] iterate ] :time
cr


t: Stage 4: Math Operations
t: ----------------------------------
t: a) 1 2 + (100,000,000 iterations)
[ 100000000 [ 1 2 + drop ] iterate ] :time
t: b) 2 1 - (100,000,000 iterations)
[ 100000000 [ 2 1 - drop ] iterate ] :time
t: c) 4 3 * (100,000,000 iterations)
[ 100000000 [ 4 3 * drop ] iterate ] :time
t: d) 5 2 /mod (100,000,000 iterations)
[ 100000000 [ 5 2 /mod 2drop ] iterate ] :time
t: e) 4 2 / (100,000,000 iterations)
[ 100000000 [ 4 2 / drop ] iterate ] :time
t: f) 5 2 mod (100,000,000 iterations)
[ 100000000 [ 5 2 mod drop ] iterate ] :time
cr


t: Stage 5: File Operations
t: ----------------------------------
t: a) Creating a 1MiB file (2,000 iterations)
variable| fid buffer |
1024 1024 * malloc buffer !
[ 2000
  [ " /tmp/big.toka" "W" file.open fid !
    fid @ buffer @ 1024 1024 * file.write drop 
    fid @ file.close 
  ] iterate
] :time
t: b) Slurping into a buffer (2,000 iterations)
[ 2000 [ " /tmp/big.toka" file.slurp drop ] iterate ] :time
t: c) Cleaning up...
#! [ " /tim/big.toka" remove gc ] :time
cr


t: Stage 6: Bubble Sort (6,000 numbers)
t: ----------------------------------
6001 cells is-array foo
t: a) Filling with random numbers
[ 6000 [ random i foo put-element ] iterate ] :time
t: b) Perform bubble sort
[ foo 6000 bsort ] :time
gc
cr


t: ----------------------------------
t: All done!
." Total Time: " total @ . ." seconds\n" 
t: ----------------------------------
bye
