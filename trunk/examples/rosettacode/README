These examples were originally done for the Rosetta Code project, which
can be found at http://www.rosettacode.org.


= A =

- Address Operations
  Demonstrate how to get the address of a variable and how to set the address of a variable.
- Apply a callback to an array
- Assigning values to an array
  In this task, the goal is to assign a value to an element of an array. The value should 
  only replace an existing value, and not insert a new key should the key not exist. If the 
  key does not exist, an error should be returned.



= B =

- Basic integer arithmetic
  Get two integers from the user, and then output the sum, difference, product, integer 
  quotient and remainder of those numbers. Don't include error handling.
- Basic pointer and reference operations
  In this task, the goal is to desmonstrate common operations on pointers and references.
- Bubble Sort
  In this task, the goal is to sort an array of elements using the bubble sort algorithm. The 
  elements must have a total order and the index of the array can be of any discrete type. For 
  languages where this is not possible, sort an array of integers.



= C =

- Change string case
- Command Line Arguments
- Comments
- Comparing two integers
- Conditional Structures
- Copy a string
- Creating a Window
- Creating an Array



= D =

- Data Representation - Getting the Size
- Defining Primitive Data Types
- Discover the Hostname



= E =

- Empty Program
- Enumeration
- Execute a System Command



= F =

- File Creation
- File Delete
- File Exists
- File I/O
- File Rename
- File Size
- Fork Process
- Formatted Numeric Output
- Function as an Argument



= I =

- IsNumeric



= L =

- Loop Structures



= P =

- Product of Array


= R =

- Regular expression matching
- Retrieving an Element of an Array



= S =

- Select from Array
- Sorting an Array of Integers
- String Byte Length
- Sum of Array



= T =

- Towers of Hanoi
- Two-dimensional array where both dimensions are given at run time
  Get two integers from the user, then create a two-dimensional array where 
  the two dimensions have the sizes given by those numbers, and which can be 
  accessed in the most natural way possible. Write some element of that
  array, and then output that element. Finally destroy the array if not done 
  by the language itself.



= U =

- User Input
- User Output
