Toka is a programming language that draws on my experiences with a variety
of languages. It's still experimental, so things sometimes change significantly
with little to no warning. Overall it does work suprising well though.

The language has been influenced by my experiences with RetroForth, HelFORTH, 
Factor, and other languages. In most respects it shows a strong bias towards
Forth. It does have some extra things (quotes, garbage collection, etc) that
make programming easier for me.

The language is documented using a tool called Notebook. (Get a copy from
http://notebook.wjduquette.com/). There is an HTML export in the "book" 
directory. Start with the "home.html" and you'll find a (somewhat) organized 
set of links to individual pages on most aspects of the language. For those 
who are familiar with it, the GLOSSARY file will give you a good reminder of 
what each word does.

Homepage: http://charleschilders.com:9812
Mirror:   http://charleschilders.com/toka

At the homepage is information on how to obtain the latest source via 
Subversion, the full documentation, and a way to download the latest "stable"
source as a tarball ("tar.gz").

Toka has an optional library that adds enhanced support for strings, network
sockets, and more. It's been tested on Linux and BSD systems, but may also
work on other systems.
--------------------------------------------------------------------------
If you have the rebuild tool (http://code.google.com/p/rebuild) and would
rather not use make, you can build and install Toka by doing:

cd source
rebuild toka
cp toka /usr/bin
cd ..
mkdir -p /usr/share/toka
cp bootstrap.toka /usr/share/toka

You will probably need to be root, at least initially. Once installed, you
can change the owner/permissions to allow a normal account to update it.
--------------------------------------------------------------------------
Documentation is now being provided in Notebook format. Notebook is a
small hypertext editor. You can get it at 
